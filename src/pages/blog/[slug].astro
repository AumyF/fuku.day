---
import type { GetStaticPaths } from "astro";
import { getEntryBySlug } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";

export const getStaticPaths = (async () => {
  const blog = await getCollection("blog");
  return blog.map((entry) => ({ params: { slug: entry.slug } }));
}) satisfies GetStaticPaths;

const post = await getEntryBySlug("blog", Astro.params.slug);
const render = await post.render();
---

<Layout title={post.data.title} description={post.data.description}>
  <div class="flex justify-center gap-4">
    <div
      class="lg:card [overflow-wrap:anywhere] max-w-[min(theme(maxWidth.3xl),100%)]"
    >
      <article>
        <h1 class="text-4xl mb-6 leading-normal">{post.data.title}</h1>
        <render.Content />
      </article>
    </div>
    <ul class="space-y-1 hidden card lg:block sticky h-min top-2">
      {
        render.headings.map((heading) => {
          return (
            <li>
              {(() => {
                switch (heading.depth) {
                  case 2:
                    return (
                      <a class={`block pl-2`} href={`#${heading.slug}`}>
                        {heading.text}
                      </a>
                    );
                  case 3:
                    return (
                      <a class={`block pl-4`} href={`#${heading.slug}`}>
                        {heading.text}
                      </a>
                    );
                  case 4:
                    return (
                      <a class={`block pl-6`} href={`#${heading.slug}`}>
                        {heading.text}
                      </a>
                    );
                }
              })()}
            </li>
          );
        })
      }
    </ul>
  </div>
</Layout>

<style>
  article :global(h2) {
    @apply text-2xl border-l-4 border-current pl-2 my-4;
  }
  article :global(h3) {
    @apply text-xl my-3;
  }
  article :global(h4) {
    @apply text-lg my-3;
  }
  article :global(p + p) {
    @apply mt-3;
  }
  article :global(hr) {
    @apply my-2 border-t border-neutral-300;
  }
  article :global(ul, ol) {
    @apply pl-6;
  }
  article :global(ul) {
    @apply list-disc;
  }
  article :global(ol) {
    @apply list-decimal;
  }
  article :global(blockquote) {
    @apply pl-2 border-l border-neutral-600;
  }
  article :global(pre) {
    @apply px-4 py-2 rounded-md;
  }

  article :global(em) {
    text-emphasis: dot;
    font-style: normal;
    margin-top: -1em;
    display: inline-block;
  }
</style>
